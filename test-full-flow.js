console.log('🧪 Testing Kokoro TTS v4.1 - Fixed Version');\nconsole.log('============================================');\n\n// Test the full flow\nasync function testFullFlow() {\n  try {\n    console.log('1️⃣ Testing extension context...');\n    const status = await new Promise(resolve => {\n      chrome.runtime.sendMessage({ action: 'getStatus' }, resolve);\n    });\n    console.log('✅ Background script responding:', status);\n    \n    console.log('2️⃣ Testing small text read...');\n    const testText = 'Hello world, this is a test of the Kokoro TTS extension.';\n    \n    const readResult = await new Promise(resolve => {\n      chrome.runtime.sendMessage({ \n        action: 'readText', \n        text: testText \n      }, resolve);\n    });\n    \n    if (readResult && readResult.success) {\n      console.log('✅ Text read request accepted');\n      \n      // Wait a moment and check status\n      setTimeout(async () => {\n        const newStatus = await new Promise(resolve => {\n          chrome.runtime.sendMessage({ action: 'getStatus' }, resolve);\n        });\n        console.log('📊 Current status:', newStatus);\n        \n        if (newStatus.isProcessing || newStatus.isPlaying) {\n          console.log('✅ Audio processing/playback working!');\n        } else if (newStatus.lastError) {\n          console.log('❌ Error occurred:', newStatus.lastError);\n        }\n      }, 2000);\n      \n    } else {\n      console.log('❌ Text read failed:', readResult);\n    }\n    \n  } catch (error) {\n    console.log('❌ Test failed:', error);\n  }\n}\n\n// Run the test\ntestFullFlow();\n\nconsole.log('============================================');\nconsole.log('🏁 Test started - check results above');\n